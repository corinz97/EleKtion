[{"name":"abstract class CompetitionAbstraction<T : ScoreMetric> : Competition<T> , CompetitionDSL<T> ","description":"entities.abstract.CompetitionAbstraction","location":"elektion/entities.abstract/-competition-abstraction/index.html","searchKeys":["CompetitionAbstraction","abstract class CompetitionAbstraction<T : ScoreMetric> : Competition<T> , CompetitionDSL<T> ","entities.abstract.CompetitionAbstraction"]},{"name":"abstract class CompetitorAbstraction<S : ScoreMetric> : Competitor<S> , CompetitorDSL<S> ","description":"entities.abstract.CompetitorAbstraction","location":"elektion/entities.abstract/-competitor-abstraction/index.html","searchKeys":["CompetitorAbstraction","abstract class CompetitorAbstraction<S : ScoreMetric> : Competitor<S> , CompetitorDSL<S> ","entities.abstract.CompetitorAbstraction"]},{"name":"abstract class PollAbstraction<S : ScoreMetric, V : Vote> : Poll<S, V> , PollDSL<S, V> ","description":"entities.abstract.PollAbstraction","location":"elektion/entities.abstract/-poll-abstraction/index.html","searchKeys":["PollAbstraction","abstract class PollAbstraction<S : ScoreMetric, V : Vote> : Poll<S, V> , PollDSL<S, V> ","entities.abstract.PollAbstraction"]},{"name":"abstract class PollManagerAbstraction<S : ScoreMetric, V : Vote> : PollManager<S, V> , PollManagerDSL<S, V> ","description":"entities.abstract.PollManagerAbstraction","location":"elektion/entities.abstract/-poll-manager-abstraction/index.html","searchKeys":["PollManagerAbstraction","abstract class PollManagerAbstraction<S : ScoreMetric, V : Vote> : PollManager<S, V> , PollManagerDSL<S, V> ","entities.abstract.PollManagerAbstraction"]},{"name":"abstract class RankingAbstraction<S : ScoreMetric> : Ranking<S> ","description":"entities.abstract.RankingAbstraction","location":"elektion/entities.abstract/-ranking-abstraction/index.html","searchKeys":["RankingAbstraction","abstract class RankingAbstraction<S : ScoreMetric> : Ranking<S> ","entities.abstract.RankingAbstraction"]},{"name":"abstract class ScoreAbstraction<T : ScoreMetric> : Score<T> ","description":"entities.abstract.ScoreAbstraction","location":"elektion/entities.abstract/-score-abstraction/index.html","searchKeys":["ScoreAbstraction","abstract class ScoreAbstraction<T : ScoreMetric> : Score<T> ","entities.abstract.ScoreAbstraction"]},{"name":"abstract class ScoreMetric : Comparable<Any> ","description":"entities.types.ScoreMetric","location":"elektion/entities.types/-score-metric/index.html","searchKeys":["ScoreMetric","abstract class ScoreMetric : Comparable<Any> ","entities.types.ScoreMetric"]},{"name":"abstract fun List<String>.asAnonymousVote(): ListOfPreferencesVote<S>","description":"entities.interfaces.dsls.LOPVoteAlgorithmDSL.asAnonymousVote","location":"elektion/entities.interfaces.dsls/-l-o-p-vote-algorithm-d-s-l/as-anonymous-vote.html","searchKeys":["asAnonymousVote","abstract fun List<String>.asAnonymousVote(): ListOfPreferencesVote<S>","entities.interfaces.dsls.LOPVoteAlgorithmDSL.asAnonymousVote"]},{"name":"abstract fun String.asAnonymousVote(): SinglePreferenceVote<S>","description":"entities.interfaces.dsls.SPVoteAlgorithmDSL.asAnonymousVote","location":"elektion/entities.interfaces.dsls/-s-p-vote-algorithm-d-s-l/as-anonymous-vote.html","searchKeys":["asAnonymousVote","abstract fun String.asAnonymousVote(): SinglePreferenceVote<S>","entities.interfaces.dsls.SPVoteAlgorithmDSL.asAnonymousVote"]},{"name":"abstract fun competition(competitionName: String, compInit: CompetitionDSL<S>.() -> Unit): Competition<S>","description":"entities.interfaces.dsls.PollDSL.competition","location":"elektion/entities.interfaces.dsls/-poll-d-s-l/competition.html","searchKeys":["competition","abstract fun competition(competitionName: String, compInit: CompetitionDSL<S>.() -> Unit): Competition<S>","entities.interfaces.dsls.PollDSL.competition"]},{"name":"abstract fun competitor(competitorName: String, compInit: CompetitorDSL<T>.() -> Unit): Competitor<T>","description":"entities.interfaces.dsls.CompetitionDSL.competitor","location":"elektion/entities.interfaces.dsls/-competition-d-s-l/competitor.html","searchKeys":["competitor","abstract fun competitor(competitorName: String, compInit: CompetitorDSL<T>.() -> Unit): Competitor<T>","entities.interfaces.dsls.CompetitionDSL.competitor"]},{"name":"abstract fun computeAllPolls(): List<Ranking<S>>","description":"entities.interfaces.PollManager.computeAllPolls","location":"elektion/entities.interfaces/-poll-manager/compute-all-polls.html","searchKeys":["computeAllPolls","abstract fun computeAllPolls(): List<Ranking<S>>","entities.interfaces.PollManager.computeAllPolls"]},{"name":"abstract fun computeByAlgorithmRules(votes: List<V>): Ranking<S>","description":"entities.interfaces.PollAlgorithm.computeByAlgorithmRules","location":"elektion/entities.interfaces/-poll-algorithm/compute-by-algorithm-rules.html","searchKeys":["computeByAlgorithmRules","abstract fun computeByAlgorithmRules(votes: List<V>): Ranking<S>","entities.interfaces.PollAlgorithm.computeByAlgorithmRules"]},{"name":"abstract fun computePoll(): Ranking<S>","description":"entities.interfaces.Poll.computePoll","location":"elektion/entities.interfaces/-poll/compute-poll.html","searchKeys":["computePoll","abstract fun computePoll(): Ranking<S>","entities.interfaces.Poll.computePoll"]},{"name":"abstract fun condorcetAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, ListOfPreferencesVote<S>>","description":"entities.interfaces.dsls.LOPVoteAlgorithmDSL.condorcetAlgorithm","location":"elektion/entities.interfaces.dsls/-l-o-p-vote-algorithm-d-s-l/condorcet-algorithm.html","searchKeys":["condorcetAlgorithm","abstract fun condorcetAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, ListOfPreferencesVote<S>>","entities.interfaces.dsls.LOPVoteAlgorithmDSL.condorcetAlgorithm"]},{"name":"abstract fun majorityVotesAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","description":"entities.interfaces.dsls.SPVoteAlgorithmDSL.majorityVotesAlgorithm","location":"elektion/entities.interfaces.dsls/-s-p-vote-algorithm-d-s-l/majority-votes-algorithm.html","searchKeys":["majorityVotesAlgorithm","abstract fun majorityVotesAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","entities.interfaces.dsls.SPVoteAlgorithmDSL.majorityVotesAlgorithm"]},{"name":"abstract fun majorityVotesHScoreAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","description":"entities.interfaces.dsls.SPVoteAlgorithmDSL.majorityVotesHScoreAlgorithm","location":"elektion/entities.interfaces.dsls/-s-p-vote-algorithm-d-s-l/majority-votes-h-score-algorithm.html","searchKeys":["majorityVotesHScoreAlgorithm","abstract fun majorityVotesHScoreAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","entities.interfaces.dsls.SPVoteAlgorithmDSL.majorityVotesHScoreAlgorithm"]},{"name":"abstract fun majorityVotesLScoreAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","description":"entities.interfaces.dsls.SPVoteAlgorithmDSL.majorityVotesLScoreAlgorithm","location":"elektion/entities.interfaces.dsls/-s-p-vote-algorithm-d-s-l/majority-votes-l-score-algorithm.html","searchKeys":["majorityVotesLScoreAlgorithm","abstract fun majorityVotesLScoreAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","entities.interfaces.dsls.SPVoteAlgorithmDSL.majorityVotesLScoreAlgorithm"]},{"name":"abstract fun poll(newPoll: PollDSL<S, V>.() -> Unit): Poll<S, V>","description":"entities.interfaces.dsls.PollManagerDSL.poll","location":"elektion/entities.interfaces.dsls/-poll-manager-d-s-l/poll.html","searchKeys":["poll","abstract fun poll(newPoll: PollDSL<S, V>.() -> Unit): Poll<S, V>","entities.interfaces.dsls.PollManagerDSL.poll"]},{"name":"abstract fun printRanking()","description":"entities.interfaces.Ranking.printRanking","location":"elektion/entities.interfaces/-ranking/print-ranking.html","searchKeys":["printRanking","abstract fun printRanking()","entities.interfaces.Ranking.printRanking"]},{"name":"abstract fun printRankings()","description":"entities.interfaces.PollManager.printRankings","location":"elektion/entities.interfaces/-poll-manager/print-rankings.html","searchKeys":["printRankings","abstract fun printRankings()","entities.interfaces.PollManager.printRankings"]},{"name":"abstract fun schultzeAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, ListOfPreferencesVote<S>>","description":"entities.interfaces.dsls.LOPVoteAlgorithmDSL.schultzeAlgorithm","location":"elektion/entities.interfaces.dsls/-l-o-p-vote-algorithm-d-s-l/schultze-algorithm.html","searchKeys":["schultzeAlgorithm","abstract fun schultzeAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, ListOfPreferencesVote<S>>","entities.interfaces.dsls.LOPVoteAlgorithmDSL.schultzeAlgorithm"]},{"name":"abstract infix fun List<String>.then(s: String): List<String>","description":"entities.interfaces.dsls.LOPVoteAlgorithmDSL.then","location":"elektion/entities.interfaces.dsls/-l-o-p-vote-algorithm-d-s-l/then.html","searchKeys":["then","abstract infix fun List<String>.then(s: String): List<String>","entities.interfaces.dsls.LOPVoteAlgorithmDSL.then"]},{"name":"abstract infix fun List<String>.votedBy(voterIdentifier: String): ListOfPreferencesVote<S>","description":"entities.interfaces.dsls.LOPVoteAlgorithmDSL.votedBy","location":"elektion/entities.interfaces.dsls/-l-o-p-vote-algorithm-d-s-l/voted-by.html","searchKeys":["votedBy","abstract infix fun List<String>.votedBy(voterIdentifier: String): ListOfPreferencesVote<S>","entities.interfaces.dsls.LOPVoteAlgorithmDSL.votedBy"]},{"name":"abstract infix fun String.then(s: String): List<String>","description":"entities.interfaces.dsls.LOPVoteAlgorithmDSL.then","location":"elektion/entities.interfaces.dsls/-l-o-p-vote-algorithm-d-s-l/then.html","searchKeys":["then","abstract infix fun String.then(s: String): List<String>","entities.interfaces.dsls.LOPVoteAlgorithmDSL.then"]},{"name":"abstract infix fun String.votedBy(voterIdentifier: String): SinglePreferenceVote<S>","description":"entities.interfaces.dsls.SPVoteAlgorithmDSL.votedBy","location":"elektion/entities.interfaces.dsls/-s-p-vote-algorithm-d-s-l/voted-by.html","searchKeys":["votedBy","abstract infix fun String.votedBy(voterIdentifier: String): SinglePreferenceVote<S>","entities.interfaces.dsls.SPVoteAlgorithmDSL.votedBy"]},{"name":"abstract infix fun initializedAs(initializer: PollManagerDSL<S, V>.() -> Unit): PollManager<S, V>","description":"entities.interfaces.dsls.PollManagerDSL.initializedAs","location":"elektion/entities.interfaces.dsls/-poll-manager-d-s-l/initialized-as.html","searchKeys":["initializedAs","abstract infix fun initializedAs(initializer: PollManagerDSL<S, V>.() -> Unit): PollManager<S, V>","entities.interfaces.dsls.PollManagerDSL.initializedAs"]},{"name":"abstract operator fun Competition<S>.unaryMinus()","description":"entities.interfaces.dsls.PollDSL.unaryMinus","location":"elektion/entities.interfaces.dsls/-poll-d-s-l/unary-minus.html","searchKeys":["unaryMinus","abstract operator fun Competition<S>.unaryMinus()","entities.interfaces.dsls.PollDSL.unaryMinus"]},{"name":"abstract operator fun Competitor<T>.unaryPlus()","description":"entities.interfaces.dsls.CompetitionDSL.unaryPlus","location":"elektion/entities.interfaces.dsls/-competition-d-s-l/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun Competitor<T>.unaryPlus()","entities.interfaces.dsls.CompetitionDSL.unaryPlus"]},{"name":"abstract operator fun Poll<S, V>.unaryPlus()","description":"entities.interfaces.dsls.PollManagerDSL.unaryPlus","location":"elektion/entities.interfaces.dsls/-poll-manager-d-s-l/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun Poll<S, V>.unaryPlus()","entities.interfaces.dsls.PollManagerDSL.unaryPlus"]},{"name":"abstract operator fun PollAlgorithm<S, V>.unaryMinus()","description":"entities.interfaces.dsls.PollDSL.unaryMinus","location":"elektion/entities.interfaces.dsls/-poll-d-s-l/unary-minus.html","searchKeys":["unaryMinus","abstract operator fun PollAlgorithm<S, V>.unaryMinus()","entities.interfaces.dsls.PollDSL.unaryMinus"]},{"name":"abstract operator fun Score<S>.unaryPlus()","description":"entities.interfaces.dsls.CompetitorDSL.unaryPlus","location":"elektion/entities.interfaces.dsls/-competitor-d-s-l/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun Score<S>.unaryPlus()","entities.interfaces.dsls.CompetitorDSL.unaryPlus"]},{"name":"abstract operator fun V.unaryPlus()","description":"entities.interfaces.dsls.PollDSL.unaryPlus","location":"elektion/entities.interfaces.dsls/-poll-d-s-l/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun V.unaryPlus()","entities.interfaces.dsls.PollDSL.unaryPlus"]},{"name":"abstract val identifier: String","description":"entities.interfaces.Voter.identifier","location":"elektion/entities.interfaces/-voter/identifier.html","searchKeys":["identifier","abstract val identifier: String","entities.interfaces.Voter.identifier"]},{"name":"abstract val parameter: String","description":"entities.interfaces.PollAlgorithmParameter.parameter","location":"elektion/entities.interfaces/-poll-algorithm-parameter/parameter.html","searchKeys":["parameter","abstract val parameter: String","entities.interfaces.PollAlgorithmParameter.parameter"]},{"name":"abstract val ranking: Map<Set<Competitor<S>>, Int?>","description":"entities.interfaces.Ranking.ranking","location":"elektion/entities.interfaces/-ranking/ranking.html","searchKeys":["ranking","abstract val ranking: Map<Set<Competitor<S>>, Int?>","entities.interfaces.Ranking.ranking"]},{"name":"abstract val votedCompetitors: List<Competitor<S>>","description":"entities.interfaces.ListOfPreferencesVote.votedCompetitors","location":"elektion/entities.interfaces/-list-of-preferences-vote/voted-competitors.html","searchKeys":["votedCompetitors","abstract val votedCompetitors: List<Competitor<S>>","entities.interfaces.ListOfPreferencesVote.votedCompetitors"]},{"name":"abstract var competition: Competition<S>","description":"entities.interfaces.Poll.competition","location":"elektion/entities.interfaces/-poll/competition.html","searchKeys":["competition","abstract var competition: Competition<S>","entities.interfaces.Poll.competition"]},{"name":"abstract var competitionName: String","description":"entities.interfaces.Competition.competitionName","location":"elektion/entities.interfaces/-competition/competition-name.html","searchKeys":["competitionName","abstract var competitionName: String","entities.interfaces.Competition.competitionName"]},{"name":"abstract var competitors: List<Competitor<T>>","description":"entities.interfaces.Competition.competitors","location":"elektion/entities.interfaces/-competition/competitors.html","searchKeys":["competitors","abstract var competitors: List<Competitor<T>>","entities.interfaces.Competition.competitors"]},{"name":"abstract var name: String","description":"entities.interfaces.Competitor.name","location":"elektion/entities.interfaces/-competitor/name.html","searchKeys":["name","abstract var name: String","entities.interfaces.Competitor.name"]},{"name":"abstract var pollAlgorithm: PollAlgorithm<S, V>","description":"entities.interfaces.Poll.pollAlgorithm","location":"elektion/entities.interfaces/-poll/poll-algorithm.html","searchKeys":["pollAlgorithm","abstract var pollAlgorithm: PollAlgorithm<S, V>","entities.interfaces.Poll.pollAlgorithm"]},{"name":"abstract var pollAlgorithmParameters: List<PollAlgorithmParameter>","description":"entities.interfaces.PollAlgorithm.pollAlgorithmParameters","location":"elektion/entities.interfaces/-poll-algorithm/poll-algorithm-parameters.html","searchKeys":["pollAlgorithmParameters","abstract var pollAlgorithmParameters: List<PollAlgorithmParameter>","entities.interfaces.PollAlgorithm.pollAlgorithmParameters"]},{"name":"abstract var pollAlgorithmParameters: List<PollAlgorithmParameter>","description":"entities.interfaces.dsls.PollAlgorithmDSL.pollAlgorithmParameters","location":"elektion/entities.interfaces.dsls/-poll-algorithm-d-s-l/poll-algorithm-parameters.html","searchKeys":["pollAlgorithmParameters","abstract var pollAlgorithmParameters: List<PollAlgorithmParameter>","entities.interfaces.dsls.PollAlgorithmDSL.pollAlgorithmParameters"]},{"name":"abstract var pollList: List<Poll<S, V>>","description":"entities.interfaces.PollManager.pollList","location":"elektion/entities.interfaces/-poll-manager/poll-list.html","searchKeys":["pollList","abstract var pollList: List<Poll<S, V>>","entities.interfaces.PollManager.pollList"]},{"name":"abstract var scoreValue: T","description":"entities.interfaces.Score.scoreValue","location":"elektion/entities.interfaces/-score/score-value.html","searchKeys":["scoreValue","abstract var scoreValue: T","entities.interfaces.Score.scoreValue"]},{"name":"abstract var scores: List<Score<S>>","description":"entities.interfaces.Competitor.scores","location":"elektion/entities.interfaces/-competitor/scores.html","searchKeys":["scores","abstract var scores: List<Score<S>>","entities.interfaces.Competitor.scores"]},{"name":"abstract var votedCompetitor: Competitor<S>","description":"entities.interfaces.SinglePreferenceVote.votedCompetitor","location":"elektion/entities.interfaces/-single-preference-vote/voted-competitor.html","searchKeys":["votedCompetitor","abstract var votedCompetitor: Competitor<S>","entities.interfaces.SinglePreferenceVote.votedCompetitor"]},{"name":"abstract var voter: Voter","description":"entities.interfaces.Vote.voter","location":"elektion/entities.interfaces/-vote/voter.html","searchKeys":["voter","abstract var voter: Voter","entities.interfaces.Vote.voter"]},{"name":"abstract var votesList: List<V>","description":"entities.interfaces.Poll.votesList","location":"elektion/entities.interfaces/-poll/votes-list.html","searchKeys":["votesList","abstract var votesList: List<V>","entities.interfaces.Poll.votesList"]},{"name":"class CondorcetAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, ListOfPreferencesVote<S>> , PollAlgorithmDSL","description":"entities.implementations.CondorcetAlgorithm","location":"elektion/entities.implementations/-condorcet-algorithm/index.html","searchKeys":["CondorcetAlgorithm","class CondorcetAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, ListOfPreferencesVote<S>> , PollAlgorithmDSL","entities.implementations.CondorcetAlgorithm"]},{"name":"class CondorcetRanking<S : ScoreMetric>(algOutput: List<Set<Competitor<S>>>) : RankingAbstraction<S> ","description":"entities.implementations.CondorcetRanking","location":"elektion/entities.implementations/-condorcet-ranking/index.html","searchKeys":["CondorcetRanking","class CondorcetRanking<S : ScoreMetric>(algOutput: List<Set<Competitor<S>>>) : RankingAbstraction<S> ","entities.implementations.CondorcetRanking"]},{"name":"class ConstructorType","description":"ConstructorType","location":"elektion/[root]/-constructor-type/index.html","searchKeys":["ConstructorType","class ConstructorType","ConstructorType"]},{"name":"class DescendingListOfPreferencesVote<S : ScoreMetric> : ListOfPreferencesVote<S> ","description":"entities.implementations.DescendingListOfPreferencesVote","location":"elektion/entities.implementations/-descending-list-of-preferences-vote/index.html","searchKeys":["DescendingListOfPreferencesVote","class DescendingListOfPreferencesVote<S : ScoreMetric> : ListOfPreferencesVote<S> ","entities.implementations.DescendingListOfPreferencesVote"]},{"name":"class DriverType","description":"DriverType","location":"elektion/[root]/-driver-type/index.html","searchKeys":["DriverType","class DriverType","DriverType"]},{"name":"class DurationType","description":"DurationType","location":"elektion/[root]/-duration-type/index.html","searchKeys":["DurationType","class DurationType","DurationType"]},{"name":"class FastestLapType","description":"FastestLapType","location":"elektion/[root]/-fastest-lap-type/index.html","searchKeys":["FastestLapType","class FastestLapType","FastestLapType"]},{"name":"class HighestScore<S : ScoreMetric> : Comparator<Score<S>> ","description":"entities.types.Comparator.HighestScore","location":"elektion/entities.types/-comparator/-highest-score/index.html","searchKeys":["HighestScore","class HighestScore<S : ScoreMetric> : Comparator<Score<S>> ","entities.types.Comparator.HighestScore"]},{"name":"class MRDataType","description":"MRDataType","location":"elektion/[root]/-m-r-data-type/index.html","searchKeys":["MRDataType","class MRDataType","MRDataType"]},{"name":"class MajorityVotesAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, SinglePreferenceVote<S>> , PollAlgorithmDSL","description":"entities.implementations.MajorityVotesAlgorithm","location":"elektion/entities.implementations/-majority-votes-algorithm/index.html","searchKeys":["MajorityVotesAlgorithm","class MajorityVotesAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, SinglePreferenceVote<S>> , PollAlgorithmDSL","entities.implementations.MajorityVotesAlgorithm"]},{"name":"class MajorityVotesThenHighestScoreAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, SinglePreferenceVote<S>> , PollAlgorithmDSL","description":"entities.implementations.MajorityVotesThenHighestScoreAlgorithm","location":"elektion/entities.implementations/-majority-votes-then-highest-score-algorithm/index.html","searchKeys":["MajorityVotesThenHighestScoreAlgorithm","class MajorityVotesThenHighestScoreAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, SinglePreferenceVote<S>> , PollAlgorithmDSL","entities.implementations.MajorityVotesThenHighestScoreAlgorithm"]},{"name":"class MajorityVotesThenLowestScoreAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, SinglePreferenceVote<S>> , PollAlgorithmDSL","description":"entities.implementations.MajorityVotesThenLowestScoreAlgorithm","location":"elektion/entities.implementations/-majority-votes-then-lowest-score-algorithm/index.html","searchKeys":["MajorityVotesThenLowestScoreAlgorithm","class MajorityVotesThenLowestScoreAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, SinglePreferenceVote<S>> , PollAlgorithmDSL","entities.implementations.MajorityVotesThenLowestScoreAlgorithm"]},{"name":"class PollInstance<S : ScoreMetric, V : Vote> : PollAbstraction<S, V> ","description":"entities.implementations.PollInstance","location":"elektion/entities.implementations/-poll-instance/index.html","searchKeys":["PollInstance","class PollInstance<S : ScoreMetric, V : Vote> : PollAbstraction<S, V> ","entities.implementations.PollInstance"]},{"name":"class PollManagerInstance<S : ScoreMetric, V : Vote> : PollManagerAbstraction<S, V> ","description":"entities.implementations.PollManagerInstance","location":"elektion/entities.implementations/-poll-manager-instance/index.html","searchKeys":["PollManagerInstance","class PollManagerInstance<S : ScoreMetric, V : Vote> : PollManagerAbstraction<S, V> ","entities.implementations.PollManagerInstance"]},{"name":"class RaceTableType","description":"RaceTableType","location":"elektion/[root]/-race-table-type/index.html","searchKeys":["RaceTableType","class RaceTableType","RaceTableType"]},{"name":"class RaceType","description":"RaceType","location":"elektion/[root]/-race-type/index.html","searchKeys":["RaceType","class RaceType","RaceType"]},{"name":"class RankingByDescendingVotesThenHighestScore<S : ScoreMetric>(unorderedRanking: Map<Competitor<S>, Int>) : RankingByDescendingVotes<S> ","description":"entities.implementations.RankingByDescendingVotesThenHighestScore","location":"elektion/entities.implementations/-ranking-by-descending-votes-then-highest-score/index.html","searchKeys":["RankingByDescendingVotesThenHighestScore","class RankingByDescendingVotesThenHighestScore<S : ScoreMetric>(unorderedRanking: Map<Competitor<S>, Int>) : RankingByDescendingVotes<S> ","entities.implementations.RankingByDescendingVotesThenHighestScore"]},{"name":"class RankingByDescendingVotesThenLowestScore<S : ScoreMetric>(unorderedRanking: Map<Competitor<S>, Int>) : RankingByDescendingVotes<S> ","description":"entities.implementations.RankingByDescendingVotesThenLowestScore","location":"elektion/entities.implementations/-ranking-by-descending-votes-then-lowest-score/index.html","searchKeys":["RankingByDescendingVotesThenLowestScore","class RankingByDescendingVotesThenLowestScore<S : ScoreMetric>(unorderedRanking: Map<Competitor<S>, Int>) : RankingByDescendingVotes<S> ","entities.implementations.RankingByDescendingVotesThenLowestScore"]},{"name":"class ResultType","description":"ResultType","location":"elektion/[root]/-result-type/index.html","searchKeys":["ResultType","class ResultType","ResultType"]},{"name":"class RootType","description":"RootType","location":"elektion/[root]/-root-type/index.html","searchKeys":["RootType","class RootType","RootType"]},{"name":"class SchultzeAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, ListOfPreferencesVote<S>> , PollAlgorithmDSL","description":"entities.implementations.SchultzeAlgorithm","location":"elektion/entities.implementations/-schultze-algorithm/index.html","searchKeys":["SchultzeAlgorithm","class SchultzeAlgorithm<S : ScoreMetric>(var pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf()) : PollAlgorithm<S, ListOfPreferencesVote<S>> , PollAlgorithmDSL","entities.implementations.SchultzeAlgorithm"]},{"name":"class SpeedType","description":"SpeedType","location":"elektion/[root]/-speed-type/index.html","searchKeys":["SpeedType","class SpeedType","SpeedType"]},{"name":"constructor()","description":"ConstructorType.ConstructorType","location":"elektion/[root]/-constructor-type/-constructor-type.html","searchKeys":["ConstructorType","constructor()","ConstructorType.ConstructorType"]},{"name":"constructor()","description":"DriverType.DriverType","location":"elektion/[root]/-driver-type/-driver-type.html","searchKeys":["DriverType","constructor()","DriverType.DriverType"]},{"name":"constructor()","description":"DurationType.DurationType","location":"elektion/[root]/-duration-type/-duration-type.html","searchKeys":["DurationType","constructor()","DurationType.DurationType"]},{"name":"constructor()","description":"FastestLapType.FastestLapType","location":"elektion/[root]/-fastest-lap-type/-fastest-lap-type.html","searchKeys":["FastestLapType","constructor()","FastestLapType.FastestLapType"]},{"name":"constructor()","description":"MRDataType.MRDataType","location":"elektion/[root]/-m-r-data-type/-m-r-data-type.html","searchKeys":["MRDataType","constructor()","MRDataType.MRDataType"]},{"name":"constructor()","description":"RaceTableType.RaceTableType","location":"elektion/[root]/-race-table-type/-race-table-type.html","searchKeys":["RaceTableType","constructor()","RaceTableType.RaceTableType"]},{"name":"constructor()","description":"RaceType.RaceType","location":"elektion/[root]/-race-type/-race-type.html","searchKeys":["RaceType","constructor()","RaceType.RaceType"]},{"name":"constructor()","description":"ResultType.ResultType","location":"elektion/[root]/-result-type/-result-type.html","searchKeys":["ResultType","constructor()","ResultType.ResultType"]},{"name":"constructor()","description":"RootType.RootType","location":"elektion/[root]/-root-type/-root-type.html","searchKeys":["RootType","constructor()","RootType.RootType"]},{"name":"constructor()","description":"SpeedType.SpeedType","location":"elektion/[root]/-speed-type/-speed-type.html","searchKeys":["SpeedType","constructor()","SpeedType.SpeedType"]},{"name":"constructor()","description":"entities.abstract.CompetitionAbstraction.CompetitionAbstraction","location":"elektion/entities.abstract/-competition-abstraction/-competition-abstraction.html","searchKeys":["CompetitionAbstraction","constructor()","entities.abstract.CompetitionAbstraction.CompetitionAbstraction"]},{"name":"constructor()","description":"entities.abstract.CompetitorAbstraction.CompetitorAbstraction","location":"elektion/entities.abstract/-competitor-abstraction/-competitor-abstraction.html","searchKeys":["CompetitorAbstraction","constructor()","entities.abstract.CompetitorAbstraction.CompetitorAbstraction"]},{"name":"constructor()","description":"entities.abstract.PollAbstraction.PollAbstraction","location":"elektion/entities.abstract/-poll-abstraction/-poll-abstraction.html","searchKeys":["PollAbstraction","constructor()","entities.abstract.PollAbstraction.PollAbstraction"]},{"name":"constructor()","description":"entities.abstract.PollManagerAbstraction.PollManagerAbstraction","location":"elektion/entities.abstract/-poll-manager-abstraction/-poll-manager-abstraction.html","searchKeys":["PollManagerAbstraction","constructor()","entities.abstract.PollManagerAbstraction.PollManagerAbstraction"]},{"name":"constructor()","description":"entities.abstract.RankingAbstraction.RankingAbstraction","location":"elektion/entities.abstract/-ranking-abstraction/-ranking-abstraction.html","searchKeys":["RankingAbstraction","constructor()","entities.abstract.RankingAbstraction.RankingAbstraction"]},{"name":"constructor()","description":"entities.abstract.ScoreAbstraction.ScoreAbstraction","location":"elektion/entities.abstract/-score-abstraction/-score-abstraction.html","searchKeys":["ScoreAbstraction","constructor()","entities.abstract.ScoreAbstraction.ScoreAbstraction"]},{"name":"constructor()","description":"entities.implementations.DescendingListOfPreferencesVote.DescendingListOfPreferencesVote","location":"elektion/entities.implementations/-descending-list-of-preferences-vote/-descending-list-of-preferences-vote.html","searchKeys":["DescendingListOfPreferencesVote","constructor()","entities.implementations.DescendingListOfPreferencesVote.DescendingListOfPreferencesVote"]},{"name":"constructor()","description":"entities.implementations.PollInstance.PollInstance","location":"elektion/entities.implementations/-poll-instance/-poll-instance.html","searchKeys":["PollInstance","constructor()","entities.implementations.PollInstance.PollInstance"]},{"name":"constructor()","description":"entities.implementations.PollManagerInstance.PollManagerInstance","location":"elektion/entities.implementations/-poll-manager-instance/-poll-manager-instance.html","searchKeys":["PollManagerInstance","constructor()","entities.implementations.PollManagerInstance.PollManagerInstance"]},{"name":"constructor()","description":"entities.types.Comparator.HighestScore.HighestScore","location":"elektion/entities.types/-comparator/-highest-score/-highest-score.html","searchKeys":["HighestScore","constructor()","entities.types.Comparator.HighestScore.HighestScore"]},{"name":"constructor()","description":"entities.types.ScoreMetric.ScoreMetric","location":"elektion/entities.types/-score-metric/-score-metric.html","searchKeys":["ScoreMetric","constructor()","entities.types.ScoreMetric.ScoreMetric"]},{"name":"constructor(algOutput: List<Set<Competitor<S>>>)","description":"entities.implementations.CondorcetRanking.CondorcetRanking","location":"elektion/entities.implementations/-condorcet-ranking/-condorcet-ranking.html","searchKeys":["CondorcetRanking","constructor(algOutput: List<Set<Competitor<S>>>)","entities.implementations.CondorcetRanking.CondorcetRanking"]},{"name":"constructor(duration: Duration)","description":"entities.types.BestTimeInMatch.BestTimeInMatch","location":"elektion/entities.types/-best-time-in-match/-best-time-in-match.html","searchKeys":["BestTimeInMatch","constructor(duration: Duration)","entities.types.BestTimeInMatch.BestTimeInMatch"]},{"name":"constructor(points: Int)","description":"entities.types.PointsInRace.PointsInRace","location":"elektion/entities.types/-points-in-race/-points-in-race.html","searchKeys":["PointsInRace","constructor(points: Int)","entities.types.PointsInRace.PointsInRace"]},{"name":"constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","description":"entities.implementations.CondorcetAlgorithm.CondorcetAlgorithm","location":"elektion/entities.implementations/-condorcet-algorithm/-condorcet-algorithm.html","searchKeys":["CondorcetAlgorithm","constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","entities.implementations.CondorcetAlgorithm.CondorcetAlgorithm"]},{"name":"constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","description":"entities.implementations.MajorityVotesAlgorithm.MajorityVotesAlgorithm","location":"elektion/entities.implementations/-majority-votes-algorithm/-majority-votes-algorithm.html","searchKeys":["MajorityVotesAlgorithm","constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","entities.implementations.MajorityVotesAlgorithm.MajorityVotesAlgorithm"]},{"name":"constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","description":"entities.implementations.MajorityVotesThenHighestScoreAlgorithm.MajorityVotesThenHighestScoreAlgorithm","location":"elektion/entities.implementations/-majority-votes-then-highest-score-algorithm/-majority-votes-then-highest-score-algorithm.html","searchKeys":["MajorityVotesThenHighestScoreAlgorithm","constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","entities.implementations.MajorityVotesThenHighestScoreAlgorithm.MajorityVotesThenHighestScoreAlgorithm"]},{"name":"constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","description":"entities.implementations.MajorityVotesThenLowestScoreAlgorithm.MajorityVotesThenLowestScoreAlgorithm","location":"elektion/entities.implementations/-majority-votes-then-lowest-score-algorithm/-majority-votes-then-lowest-score-algorithm.html","searchKeys":["MajorityVotesThenLowestScoreAlgorithm","constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","entities.implementations.MajorityVotesThenLowestScoreAlgorithm.MajorityVotesThenLowestScoreAlgorithm"]},{"name":"constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","description":"entities.implementations.SchultzeAlgorithm.SchultzeAlgorithm","location":"elektion/entities.implementations/-schultze-algorithm/-schultze-algorithm.html","searchKeys":["SchultzeAlgorithm","constructor(pollAlgorithmParameters: List<PollAlgorithmParameter> = listOf())","entities.implementations.SchultzeAlgorithm.SchultzeAlgorithm"]},{"name":"constructor(speed: Float)","description":"entities.types.FastestLapAvgSpeed.FastestLapAvgSpeed","location":"elektion/entities.types/-fastest-lap-avg-speed/-fastest-lap-avg-speed.html","searchKeys":["FastestLapAvgSpeed","constructor(speed: Float)","entities.types.FastestLapAvgSpeed.FastestLapAvgSpeed"]},{"name":"constructor(unorderedRanking: Map<Competitor<S>, Int>)","description":"entities.implementations.RankingByDescendingVotes.RankingByDescendingVotes","location":"elektion/entities.implementations/-ranking-by-descending-votes/-ranking-by-descending-votes.html","searchKeys":["RankingByDescendingVotes","constructor(unorderedRanking: Map<Competitor<S>, Int>)","entities.implementations.RankingByDescendingVotes.RankingByDescendingVotes"]},{"name":"constructor(unorderedRanking: Map<Competitor<S>, Int>)","description":"entities.implementations.RankingByDescendingVotesThenHighestScore.RankingByDescendingVotesThenHighestScore","location":"elektion/entities.implementations/-ranking-by-descending-votes-then-highest-score/-ranking-by-descending-votes-then-highest-score.html","searchKeys":["RankingByDescendingVotesThenHighestScore","constructor(unorderedRanking: Map<Competitor<S>, Int>)","entities.implementations.RankingByDescendingVotesThenHighestScore.RankingByDescendingVotesThenHighestScore"]},{"name":"constructor(unorderedRanking: Map<Competitor<S>, Int>)","description":"entities.implementations.RankingByDescendingVotesThenLowestScore.RankingByDescendingVotesThenLowestScore","location":"elektion/entities.implementations/-ranking-by-descending-votes-then-lowest-score/-ranking-by-descending-votes-then-lowest-score.html","searchKeys":["RankingByDescendingVotesThenLowestScore","constructor(unorderedRanking: Map<Competitor<S>, Int>)","entities.implementations.RankingByDescendingVotesThenLowestScore.RankingByDescendingVotesThenLowestScore"]},{"name":"constructor(wins: Int)","description":"entities.types.WinsInCampionship.WinsInCampionship","location":"elektion/entities.types/-wins-in-campionship/-wins-in-campionship.html","searchKeys":["WinsInCampionship","constructor(wins: Int)","entities.types.WinsInCampionship.WinsInCampionship"]},{"name":"data class BestTimeInMatch(val duration: Duration) : ScoreMetric","description":"entities.types.BestTimeInMatch","location":"elektion/entities.types/-best-time-in-match/index.html","searchKeys":["BestTimeInMatch","data class BestTimeInMatch(val duration: Duration) : ScoreMetric","entities.types.BestTimeInMatch"]},{"name":"data class FastestLapAvgSpeed(val speed: Float) : ScoreMetric","description":"entities.types.FastestLapAvgSpeed","location":"elektion/entities.types/-fastest-lap-avg-speed/index.html","searchKeys":["FastestLapAvgSpeed","data class FastestLapAvgSpeed(val speed: Float) : ScoreMetric","entities.types.FastestLapAvgSpeed"]},{"name":"data class PointsInRace(val points: Int) : ScoreMetric","description":"entities.types.PointsInRace","location":"elektion/entities.types/-points-in-race/index.html","searchKeys":["PointsInRace","data class PointsInRace(val points: Int) : ScoreMetric","entities.types.PointsInRace"]},{"name":"data class WinsInCampionship(val wins: Int) : ScoreMetric","description":"entities.types.WinsInCampionship","location":"elektion/entities.types/-wins-in-campionship/index.html","searchKeys":["WinsInCampionship","data class WinsInCampionship(val wins: Int) : ScoreMetric","entities.types.WinsInCampionship"]},{"name":"data object AllowMultipleVoteInPollParameter : PollAlgorithmParameter","description":"entities.types.ConstantParameter.AllowMultipleVoteInPollParameter","location":"elektion/entities.types/-constant-parameter/-allow-multiple-vote-in-poll-parameter/index.html","searchKeys":["AllowMultipleVoteInPollParameter","data object AllowMultipleVoteInPollParameter : PollAlgorithmParameter","entities.types.ConstantParameter.AllowMultipleVoteInPollParameter"]},{"name":"expect object Platform","description":"Platform","location":"elektion/[root]/-platform/index.html","searchKeys":["Platform","expect object Platform","Platform"]},{"name":"expect val name: String","description":"Platform.name","location":"elektion/[root]/-platform/name.html","searchKeys":["name","expect val name: String","Platform.name"]},{"name":"infix fun BestTimeInMatch.Companion.realized(duration: Duration): Score<BestTimeInMatch>","description":"entities.types.BestTimeInMatch.Companion.realized","location":"elektion/entities.types/-best-time-in-match/-companion/realized.html","searchKeys":["realized","infix fun BestTimeInMatch.Companion.realized(duration: Duration): Score<BestTimeInMatch>","entities.types.BestTimeInMatch.Companion.realized"]},{"name":"infix fun FastestLapAvgSpeed.Companion.realized(speed: Float): Score<FastestLapAvgSpeed>","description":"entities.types.FastestLapAvgSpeed.Companion.realized","location":"elektion/entities.types/-fastest-lap-avg-speed/-companion/realized.html","searchKeys":["realized","infix fun FastestLapAvgSpeed.Companion.realized(speed: Float): Score<FastestLapAvgSpeed>","entities.types.FastestLapAvgSpeed.Companion.realized"]},{"name":"infix fun PointsInRace.Companion.realized(points: Int): Score<PointsInRace>","description":"entities.types.PointsInRace.Companion.realized","location":"elektion/entities.types/-points-in-race/-companion/realized.html","searchKeys":["realized","infix fun PointsInRace.Companion.realized(points: Int): Score<PointsInRace>","entities.types.PointsInRace.Companion.realized"]},{"name":"infix fun WinsInCampionship.Companion.realized(wins: Int): Score<WinsInCampionship>","description":"entities.types.WinsInCampionship.Companion.realized","location":"elektion/entities.types/-wins-in-campionship/-companion/realized.html","searchKeys":["realized","infix fun WinsInCampionship.Companion.realized(wins: Int): Score<WinsInCampionship>","entities.types.WinsInCampionship.Companion.realized"]},{"name":"interface Competition<T : ScoreMetric>","description":"entities.interfaces.Competition","location":"elektion/entities.interfaces/-competition/index.html","searchKeys":["Competition","interface Competition<T : ScoreMetric>","entities.interfaces.Competition"]},{"name":"interface CompetitionDSL<T : ScoreMetric>","description":"entities.interfaces.dsls.CompetitionDSL","location":"elektion/entities.interfaces.dsls/-competition-d-s-l/index.html","searchKeys":["CompetitionDSL","interface CompetitionDSL<T : ScoreMetric>","entities.interfaces.dsls.CompetitionDSL"]},{"name":"interface Competitor<S : ScoreMetric>","description":"entities.interfaces.Competitor","location":"elektion/entities.interfaces/-competitor/index.html","searchKeys":["Competitor","interface Competitor<S : ScoreMetric>","entities.interfaces.Competitor"]},{"name":"interface CompetitorDSL<S : ScoreMetric>","description":"entities.interfaces.dsls.CompetitorDSL","location":"elektion/entities.interfaces.dsls/-competitor-d-s-l/index.html","searchKeys":["CompetitorDSL","interface CompetitorDSL<S : ScoreMetric>","entities.interfaces.dsls.CompetitorDSL"]},{"name":"interface LOPVoteAlgorithmDSL<S : ScoreMetric>","description":"entities.interfaces.dsls.LOPVoteAlgorithmDSL","location":"elektion/entities.interfaces.dsls/-l-o-p-vote-algorithm-d-s-l/index.html","searchKeys":["LOPVoteAlgorithmDSL","interface LOPVoteAlgorithmDSL<S : ScoreMetric>","entities.interfaces.dsls.LOPVoteAlgorithmDSL"]},{"name":"interface ListOfPreferencesVote<S : ScoreMetric> : Vote","description":"entities.interfaces.ListOfPreferencesVote","location":"elektion/entities.interfaces/-list-of-preferences-vote/index.html","searchKeys":["ListOfPreferencesVote","interface ListOfPreferencesVote<S : ScoreMetric> : Vote","entities.interfaces.ListOfPreferencesVote"]},{"name":"interface Poll<S : ScoreMetric, V : Vote>","description":"entities.interfaces.Poll","location":"elektion/entities.interfaces/-poll/index.html","searchKeys":["Poll","interface Poll<S : ScoreMetric, V : Vote>","entities.interfaces.Poll"]},{"name":"interface PollAlgorithm<S : ScoreMetric, V : Vote>","description":"entities.interfaces.PollAlgorithm","location":"elektion/entities.interfaces/-poll-algorithm/index.html","searchKeys":["PollAlgorithm","interface PollAlgorithm<S : ScoreMetric, V : Vote>","entities.interfaces.PollAlgorithm"]},{"name":"interface PollAlgorithmDSL","description":"entities.interfaces.dsls.PollAlgorithmDSL","location":"elektion/entities.interfaces.dsls/-poll-algorithm-d-s-l/index.html","searchKeys":["PollAlgorithmDSL","interface PollAlgorithmDSL","entities.interfaces.dsls.PollAlgorithmDSL"]},{"name":"interface PollAlgorithmParameter","description":"entities.interfaces.PollAlgorithmParameter","location":"elektion/entities.interfaces/-poll-algorithm-parameter/index.html","searchKeys":["PollAlgorithmParameter","interface PollAlgorithmParameter","entities.interfaces.PollAlgorithmParameter"]},{"name":"interface PollDSL<S : ScoreMetric, V : Vote> : SPVoteAlgorithmDSL<S> , LOPVoteAlgorithmDSL<S> ","description":"entities.interfaces.dsls.PollDSL","location":"elektion/entities.interfaces.dsls/-poll-d-s-l/index.html","searchKeys":["PollDSL","interface PollDSL<S : ScoreMetric, V : Vote> : SPVoteAlgorithmDSL<S> , LOPVoteAlgorithmDSL<S> ","entities.interfaces.dsls.PollDSL"]},{"name":"interface PollManager<S : ScoreMetric, V : Vote>","description":"entities.interfaces.PollManager","location":"elektion/entities.interfaces/-poll-manager/index.html","searchKeys":["PollManager","interface PollManager<S : ScoreMetric, V : Vote>","entities.interfaces.PollManager"]},{"name":"interface PollManagerDSL<S : ScoreMetric, V : Vote>","description":"entities.interfaces.dsls.PollManagerDSL","location":"elektion/entities.interfaces.dsls/-poll-manager-d-s-l/index.html","searchKeys":["PollManagerDSL","interface PollManagerDSL<S : ScoreMetric, V : Vote>","entities.interfaces.dsls.PollManagerDSL"]},{"name":"interface Ranking<S : ScoreMetric>","description":"entities.interfaces.Ranking","location":"elektion/entities.interfaces/-ranking/index.html","searchKeys":["Ranking","interface Ranking<S : ScoreMetric>","entities.interfaces.Ranking"]},{"name":"interface SPVoteAlgorithmDSL<S : ScoreMetric>","description":"entities.interfaces.dsls.SPVoteAlgorithmDSL","location":"elektion/entities.interfaces.dsls/-s-p-vote-algorithm-d-s-l/index.html","searchKeys":["SPVoteAlgorithmDSL","interface SPVoteAlgorithmDSL<S : ScoreMetric>","entities.interfaces.dsls.SPVoteAlgorithmDSL"]},{"name":"interface Score<T : ScoreMetric>","description":"entities.interfaces.Score","location":"elektion/entities.interfaces/-score/index.html","searchKeys":["Score","interface Score<T : ScoreMetric>","entities.interfaces.Score"]},{"name":"interface SinglePreferenceVote<S : ScoreMetric> : Vote","description":"entities.interfaces.SinglePreferenceVote","location":"elektion/entities.interfaces/-single-preference-vote/index.html","searchKeys":["SinglePreferenceVote","interface SinglePreferenceVote<S : ScoreMetric> : Vote","entities.interfaces.SinglePreferenceVote"]},{"name":"interface Vote","description":"entities.interfaces.Vote","location":"elektion/entities.interfaces/-vote/index.html","searchKeys":["Vote","interface Vote","entities.interfaces.Vote"]},{"name":"interface Voter","description":"entities.interfaces.Voter","location":"elektion/entities.interfaces/-voter/index.html","searchKeys":["Voter","interface Voter","entities.interfaces.Voter"]},{"name":"lateinit var candidates: List<Competitor<S>>","description":"entities.implementations.CondorcetAlgorithm.candidates","location":"elektion/entities.implementations/-condorcet-algorithm/candidates.html","searchKeys":["candidates","lateinit var candidates: List<Competitor<S>>","entities.implementations.CondorcetAlgorithm.candidates"]},{"name":"lateinit var candidates: List<Competitor<S>>","description":"entities.implementations.MajorityVotesAlgorithm.candidates","location":"elektion/entities.implementations/-majority-votes-algorithm/candidates.html","searchKeys":["candidates","lateinit var candidates: List<Competitor<S>>","entities.implementations.MajorityVotesAlgorithm.candidates"]},{"name":"lateinit var candidates: List<Competitor<S>>","description":"entities.implementations.MajorityVotesThenHighestScoreAlgorithm.candidates","location":"elektion/entities.implementations/-majority-votes-then-highest-score-algorithm/candidates.html","searchKeys":["candidates","lateinit var candidates: List<Competitor<S>>","entities.implementations.MajorityVotesThenHighestScoreAlgorithm.candidates"]},{"name":"lateinit var candidates: List<Competitor<S>>","description":"entities.implementations.MajorityVotesThenLowestScoreAlgorithm.candidates","location":"elektion/entities.implementations/-majority-votes-then-lowest-score-algorithm/candidates.html","searchKeys":["candidates","lateinit var candidates: List<Competitor<S>>","entities.implementations.MajorityVotesThenLowestScoreAlgorithm.candidates"]},{"name":"lateinit var candidates: List<Competitor<S>>","description":"entities.implementations.SchultzeAlgorithm.candidates","location":"elektion/entities.implementations/-schultze-algorithm/candidates.html","searchKeys":["candidates","lateinit var candidates: List<Competitor<S>>","entities.implementations.SchultzeAlgorithm.candidates"]},{"name":"object Companion","description":"entities.types.BestTimeInMatch.Companion","location":"elektion/entities.types/-best-time-in-match/-companion/index.html","searchKeys":["Companion","object Companion","entities.types.BestTimeInMatch.Companion"]},{"name":"object Companion","description":"entities.types.FastestLapAvgSpeed.Companion","location":"elektion/entities.types/-fastest-lap-avg-speed/-companion/index.html","searchKeys":["Companion","object Companion","entities.types.FastestLapAvgSpeed.Companion"]},{"name":"object Companion","description":"entities.types.PointsInRace.Companion","location":"elektion/entities.types/-points-in-race/-companion/index.html","searchKeys":["Companion","object Companion","entities.types.PointsInRace.Companion"]},{"name":"object Companion","description":"entities.types.WinsInCampionship.Companion","location":"elektion/entities.types/-wins-in-campionship/-companion/index.html","searchKeys":["Companion","object Companion","entities.types.WinsInCampionship.Companion"]},{"name":"open class RankingByDescendingVotes<S : ScoreMetric>(unorderedRanking: Map<Competitor<S>, Int>) : RankingAbstraction<S> ","description":"entities.implementations.RankingByDescendingVotes","location":"elektion/entities.implementations/-ranking-by-descending-votes/index.html","searchKeys":["RankingByDescendingVotes","open class RankingByDescendingVotes<S : ScoreMetric>(unorderedRanking: Map<Competitor<S>, Int>) : RankingAbstraction<S> ","entities.implementations.RankingByDescendingVotes"]},{"name":"open infix override fun List<String>.then(s: String): List<String>","description":"entities.abstract.PollAbstraction.then","location":"elektion/entities.abstract/-poll-abstraction/then.html","searchKeys":["then","open infix override fun List<String>.then(s: String): List<String>","entities.abstract.PollAbstraction.then"]},{"name":"open infix override fun List<String>.votedBy(voterIdentifier: String): ListOfPreferencesVote<S>","description":"entities.abstract.PollAbstraction.votedBy","location":"elektion/entities.abstract/-poll-abstraction/voted-by.html","searchKeys":["votedBy","open infix override fun List<String>.votedBy(voterIdentifier: String): ListOfPreferencesVote<S>","entities.abstract.PollAbstraction.votedBy"]},{"name":"open infix override fun String.then(s: String): List<String>","description":"entities.abstract.PollAbstraction.then","location":"elektion/entities.abstract/-poll-abstraction/then.html","searchKeys":["then","open infix override fun String.then(s: String): List<String>","entities.abstract.PollAbstraction.then"]},{"name":"open infix override fun String.votedBy(voterIdentifier: String): SinglePreferenceVote<S>","description":"entities.abstract.PollAbstraction.votedBy","location":"elektion/entities.abstract/-poll-abstraction/voted-by.html","searchKeys":["votedBy","open infix override fun String.votedBy(voterIdentifier: String): SinglePreferenceVote<S>","entities.abstract.PollAbstraction.votedBy"]},{"name":"open infix override fun initializedAs(initializer: PollManagerDSL<S, V>.() -> Unit): PollManager<S, V>","description":"entities.implementations.PollManagerInstance.initializedAs","location":"elektion/entities.implementations/-poll-manager-instance/initialized-as.html","searchKeys":["initializedAs","open infix override fun initializedAs(initializer: PollManagerDSL<S, V>.() -> Unit): PollManager<S, V>","entities.implementations.PollManagerInstance.initializedAs"]},{"name":"open lateinit override var competition: Competition<S>","description":"entities.abstract.PollAbstraction.competition","location":"elektion/entities.abstract/-poll-abstraction/competition.html","searchKeys":["competition","open lateinit override var competition: Competition<S>","entities.abstract.PollAbstraction.competition"]},{"name":"open lateinit override var competitionName: String","description":"entities.abstract.CompetitionAbstraction.competitionName","location":"elektion/entities.abstract/-competition-abstraction/competition-name.html","searchKeys":["competitionName","open lateinit override var competitionName: String","entities.abstract.CompetitionAbstraction.competitionName"]},{"name":"open lateinit override var competitors: List<Competitor<T>>","description":"entities.abstract.CompetitionAbstraction.competitors","location":"elektion/entities.abstract/-competition-abstraction/competitors.html","searchKeys":["competitors","open lateinit override var competitors: List<Competitor<T>>","entities.abstract.CompetitionAbstraction.competitors"]},{"name":"open lateinit override var name: String","description":"entities.abstract.CompetitorAbstraction.name","location":"elektion/entities.abstract/-competitor-abstraction/name.html","searchKeys":["name","open lateinit override var name: String","entities.abstract.CompetitorAbstraction.name"]},{"name":"open lateinit override var pollAlgorithm: PollAlgorithm<S, V>","description":"entities.abstract.PollAbstraction.pollAlgorithm","location":"elektion/entities.abstract/-poll-abstraction/poll-algorithm.html","searchKeys":["pollAlgorithm","open lateinit override var pollAlgorithm: PollAlgorithm<S, V>","entities.abstract.PollAbstraction.pollAlgorithm"]},{"name":"open lateinit override var pollList: List<Poll<S, V>>","description":"entities.abstract.PollManagerAbstraction.pollList","location":"elektion/entities.abstract/-poll-manager-abstraction/poll-list.html","searchKeys":["pollList","open lateinit override var pollList: List<Poll<S, V>>","entities.abstract.PollManagerAbstraction.pollList"]},{"name":"open lateinit override var scoreValue: T","description":"entities.abstract.ScoreAbstraction.scoreValue","location":"elektion/entities.abstract/-score-abstraction/score-value.html","searchKeys":["scoreValue","open lateinit override var scoreValue: T","entities.abstract.ScoreAbstraction.scoreValue"]},{"name":"open lateinit override var votedCompetitors: List<Competitor<S>>","description":"entities.implementations.DescendingListOfPreferencesVote.votedCompetitors","location":"elektion/entities.implementations/-descending-list-of-preferences-vote/voted-competitors.html","searchKeys":["votedCompetitors","open lateinit override var votedCompetitors: List<Competitor<S>>","entities.implementations.DescendingListOfPreferencesVote.votedCompetitors"]},{"name":"open lateinit override var voter: Voter","description":"entities.implementations.DescendingListOfPreferencesVote.voter","location":"elektion/entities.implementations/-descending-list-of-preferences-vote/voter.html","searchKeys":["voter","open lateinit override var voter: Voter","entities.implementations.DescendingListOfPreferencesVote.voter"]},{"name":"open lateinit override var votesList: List<V>","description":"entities.abstract.PollAbstraction.votesList","location":"elektion/entities.abstract/-poll-abstraction/votes-list.html","searchKeys":["votesList","open lateinit override var votesList: List<V>","entities.abstract.PollAbstraction.votesList"]},{"name":"open operator fun PollAlgorithmParameter.unaryPlus()","description":"entities.interfaces.dsls.PollAlgorithmDSL.unaryPlus","location":"elektion/entities.interfaces.dsls/-poll-algorithm-d-s-l/unary-plus.html","searchKeys":["unaryPlus","open operator fun PollAlgorithmParameter.unaryPlus()","entities.interfaces.dsls.PollAlgorithmDSL.unaryPlus"]},{"name":"open operator override fun Competition<S>.unaryMinus()","description":"entities.abstract.PollAbstraction.unaryMinus","location":"elektion/entities.abstract/-poll-abstraction/unary-minus.html","searchKeys":["unaryMinus","open operator override fun Competition<S>.unaryMinus()","entities.abstract.PollAbstraction.unaryMinus"]},{"name":"open operator override fun Competitor<T>.unaryPlus()","description":"entities.abstract.CompetitionAbstraction.unaryPlus","location":"elektion/entities.abstract/-competition-abstraction/unary-plus.html","searchKeys":["unaryPlus","open operator override fun Competitor<T>.unaryPlus()","entities.abstract.CompetitionAbstraction.unaryPlus"]},{"name":"open operator override fun Poll<S, V>.unaryPlus()","description":"entities.abstract.PollManagerAbstraction.unaryPlus","location":"elektion/entities.abstract/-poll-manager-abstraction/unary-plus.html","searchKeys":["unaryPlus","open operator override fun Poll<S, V>.unaryPlus()","entities.abstract.PollManagerAbstraction.unaryPlus"]},{"name":"open operator override fun PollAlgorithm<S, V>.unaryMinus()","description":"entities.abstract.PollAbstraction.unaryMinus","location":"elektion/entities.abstract/-poll-abstraction/unary-minus.html","searchKeys":["unaryMinus","open operator override fun PollAlgorithm<S, V>.unaryMinus()","entities.abstract.PollAbstraction.unaryMinus"]},{"name":"open operator override fun Score<S>.unaryPlus()","description":"entities.abstract.CompetitorAbstraction.unaryPlus","location":"elektion/entities.abstract/-competitor-abstraction/unary-plus.html","searchKeys":["unaryPlus","open operator override fun Score<S>.unaryPlus()","entities.abstract.CompetitorAbstraction.unaryPlus"]},{"name":"open operator override fun V.unaryPlus()","description":"entities.abstract.PollAbstraction.unaryPlus","location":"elektion/entities.abstract/-poll-abstraction/unary-plus.html","searchKeys":["unaryPlus","open operator override fun V.unaryPlus()","entities.abstract.PollAbstraction.unaryPlus"]},{"name":"open operator override fun compareTo(other: Any): Int","description":"entities.types.BestTimeInMatch.compareTo","location":"elektion/entities.types/-best-time-in-match/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Any): Int","entities.types.BestTimeInMatch.compareTo"]},{"name":"open operator override fun compareTo(other: Any): Int","description":"entities.types.FastestLapAvgSpeed.compareTo","location":"elektion/entities.types/-fastest-lap-avg-speed/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Any): Int","entities.types.FastestLapAvgSpeed.compareTo"]},{"name":"open operator override fun compareTo(other: Any): Int","description":"entities.types.PointsInRace.compareTo","location":"elektion/entities.types/-points-in-race/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Any): Int","entities.types.PointsInRace.compareTo"]},{"name":"open operator override fun compareTo(other: Any): Int","description":"entities.types.WinsInCampionship.compareTo","location":"elektion/entities.types/-wins-in-campionship/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Any): Int","entities.types.WinsInCampionship.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entities.abstract.CompetitorAbstraction.equals","location":"elektion/entities.abstract/-competitor-abstraction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entities.abstract.CompetitorAbstraction.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entities.abstract.ScoreAbstraction.equals","location":"elektion/entities.abstract/-score-abstraction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entities.abstract.ScoreAbstraction.equals"]},{"name":"open override fun List<String>.asAnonymousVote(): ListOfPreferencesVote<S>","description":"entities.abstract.PollAbstraction.asAnonymousVote","location":"elektion/entities.abstract/-poll-abstraction/as-anonymous-vote.html","searchKeys":["asAnonymousVote","open override fun List<String>.asAnonymousVote(): ListOfPreferencesVote<S>","entities.abstract.PollAbstraction.asAnonymousVote"]},{"name":"open override fun String.asAnonymousVote(): SinglePreferenceVote<S>","description":"entities.abstract.PollAbstraction.asAnonymousVote","location":"elektion/entities.abstract/-poll-abstraction/as-anonymous-vote.html","searchKeys":["asAnonymousVote","open override fun String.asAnonymousVote(): SinglePreferenceVote<S>","entities.abstract.PollAbstraction.asAnonymousVote"]},{"name":"open override fun compare(a: Score<S>, b: Score<S>): Int","description":"entities.types.Comparator.HighestScore.compare","location":"elektion/entities.types/-comparator/-highest-score/compare.html","searchKeys":["compare","open override fun compare(a: Score<S>, b: Score<S>): Int","entities.types.Comparator.HighestScore.compare"]},{"name":"open override fun competition(competitionName: String, compInit: CompetitionDSL<S>.() -> Unit): Competition<S>","description":"entities.abstract.PollAbstraction.competition","location":"elektion/entities.abstract/-poll-abstraction/competition.html","searchKeys":["competition","open override fun competition(competitionName: String, compInit: CompetitionDSL<S>.() -> Unit): Competition<S>","entities.abstract.PollAbstraction.competition"]},{"name":"open override fun competitor(competitorName: String, compInit: CompetitorDSL<T>.() -> Unit): Competitor<T>","description":"entities.abstract.CompetitionAbstraction.competitor","location":"elektion/entities.abstract/-competition-abstraction/competitor.html","searchKeys":["competitor","open override fun competitor(competitorName: String, compInit: CompetitorDSL<T>.() -> Unit): Competitor<T>","entities.abstract.CompetitionAbstraction.competitor"]},{"name":"open override fun computeAllPolls(): List<Ranking<S>>","description":"entities.implementations.PollManagerInstance.computeAllPolls","location":"elektion/entities.implementations/-poll-manager-instance/compute-all-polls.html","searchKeys":["computeAllPolls","open override fun computeAllPolls(): List<Ranking<S>>","entities.implementations.PollManagerInstance.computeAllPolls"]},{"name":"open override fun computeByAlgorithmRules(votes: List<ListOfPreferencesVote<S>>): Ranking<S>","description":"entities.implementations.CondorcetAlgorithm.computeByAlgorithmRules","location":"elektion/entities.implementations/-condorcet-algorithm/compute-by-algorithm-rules.html","searchKeys":["computeByAlgorithmRules","open override fun computeByAlgorithmRules(votes: List<ListOfPreferencesVote<S>>): Ranking<S>","entities.implementations.CondorcetAlgorithm.computeByAlgorithmRules"]},{"name":"open override fun computeByAlgorithmRules(votes: List<ListOfPreferencesVote<S>>): Ranking<S>","description":"entities.implementations.SchultzeAlgorithm.computeByAlgorithmRules","location":"elektion/entities.implementations/-schultze-algorithm/compute-by-algorithm-rules.html","searchKeys":["computeByAlgorithmRules","open override fun computeByAlgorithmRules(votes: List<ListOfPreferencesVote<S>>): Ranking<S>","entities.implementations.SchultzeAlgorithm.computeByAlgorithmRules"]},{"name":"open override fun computeByAlgorithmRules(votes: List<SinglePreferenceVote<S>>): Ranking<S>","description":"entities.implementations.MajorityVotesAlgorithm.computeByAlgorithmRules","location":"elektion/entities.implementations/-majority-votes-algorithm/compute-by-algorithm-rules.html","searchKeys":["computeByAlgorithmRules","open override fun computeByAlgorithmRules(votes: List<SinglePreferenceVote<S>>): Ranking<S>","entities.implementations.MajorityVotesAlgorithm.computeByAlgorithmRules"]},{"name":"open override fun computeByAlgorithmRules(votes: List<SinglePreferenceVote<S>>): Ranking<S>","description":"entities.implementations.MajorityVotesThenHighestScoreAlgorithm.computeByAlgorithmRules","location":"elektion/entities.implementations/-majority-votes-then-highest-score-algorithm/compute-by-algorithm-rules.html","searchKeys":["computeByAlgorithmRules","open override fun computeByAlgorithmRules(votes: List<SinglePreferenceVote<S>>): Ranking<S>","entities.implementations.MajorityVotesThenHighestScoreAlgorithm.computeByAlgorithmRules"]},{"name":"open override fun computeByAlgorithmRules(votes: List<SinglePreferenceVote<S>>): Ranking<S>","description":"entities.implementations.MajorityVotesThenLowestScoreAlgorithm.computeByAlgorithmRules","location":"elektion/entities.implementations/-majority-votes-then-lowest-score-algorithm/compute-by-algorithm-rules.html","searchKeys":["computeByAlgorithmRules","open override fun computeByAlgorithmRules(votes: List<SinglePreferenceVote<S>>): Ranking<S>","entities.implementations.MajorityVotesThenLowestScoreAlgorithm.computeByAlgorithmRules"]},{"name":"open override fun computePoll(): Ranking<S>","description":"entities.abstract.PollAbstraction.computePoll","location":"elektion/entities.abstract/-poll-abstraction/compute-poll.html","searchKeys":["computePoll","open override fun computePoll(): Ranking<S>","entities.abstract.PollAbstraction.computePoll"]},{"name":"open override fun condorcetAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, ListOfPreferencesVote<S>>","description":"entities.implementations.PollInstance.condorcetAlgorithm","location":"elektion/entities.implementations/-poll-instance/condorcet-algorithm.html","searchKeys":["condorcetAlgorithm","open override fun condorcetAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, ListOfPreferencesVote<S>>","entities.implementations.PollInstance.condorcetAlgorithm"]},{"name":"open override fun hashCode(): Int","description":"entities.abstract.CompetitorAbstraction.hashCode","location":"elektion/entities.abstract/-competitor-abstraction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entities.abstract.CompetitorAbstraction.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entities.abstract.ScoreAbstraction.hashCode","location":"elektion/entities.abstract/-score-abstraction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entities.abstract.ScoreAbstraction.hashCode"]},{"name":"open override fun majorityVotesAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","description":"entities.implementations.PollInstance.majorityVotesAlgorithm","location":"elektion/entities.implementations/-poll-instance/majority-votes-algorithm.html","searchKeys":["majorityVotesAlgorithm","open override fun majorityVotesAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","entities.implementations.PollInstance.majorityVotesAlgorithm"]},{"name":"open override fun majorityVotesHScoreAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","description":"entities.implementations.PollInstance.majorityVotesHScoreAlgorithm","location":"elektion/entities.implementations/-poll-instance/majority-votes-h-score-algorithm.html","searchKeys":["majorityVotesHScoreAlgorithm","open override fun majorityVotesHScoreAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","entities.implementations.PollInstance.majorityVotesHScoreAlgorithm"]},{"name":"open override fun majorityVotesLScoreAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","description":"entities.implementations.PollInstance.majorityVotesLScoreAlgorithm","location":"elektion/entities.implementations/-poll-instance/majority-votes-l-score-algorithm.html","searchKeys":["majorityVotesLScoreAlgorithm","open override fun majorityVotesLScoreAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, SinglePreferenceVote<S>>","entities.implementations.PollInstance.majorityVotesLScoreAlgorithm"]},{"name":"open override fun poll(newPoll: PollDSL<S, V>.() -> Unit): Poll<S, V>","description":"entities.implementations.PollManagerInstance.poll","location":"elektion/entities.implementations/-poll-manager-instance/poll.html","searchKeys":["poll","open override fun poll(newPoll: PollDSL<S, V>.() -> Unit): Poll<S, V>","entities.implementations.PollManagerInstance.poll"]},{"name":"open override fun printRanking()","description":"entities.abstract.RankingAbstraction.printRanking","location":"elektion/entities.abstract/-ranking-abstraction/print-ranking.html","searchKeys":["printRanking","open override fun printRanking()","entities.abstract.RankingAbstraction.printRanking"]},{"name":"open override fun printRankings()","description":"entities.implementations.PollManagerInstance.printRankings","location":"elektion/entities.implementations/-poll-manager-instance/print-rankings.html","searchKeys":["printRankings","open override fun printRankings()","entities.implementations.PollManagerInstance.printRankings"]},{"name":"open override fun schultzeAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, ListOfPreferencesVote<S>>","description":"entities.implementations.PollInstance.schultzeAlgorithm","location":"elektion/entities.implementations/-poll-instance/schultze-algorithm.html","searchKeys":["schultzeAlgorithm","open override fun schultzeAlgorithm(algInit: PollAlgorithmDSL.() -> Unit): PollAlgorithm<S, ListOfPreferencesVote<S>>","entities.implementations.PollInstance.schultzeAlgorithm"]},{"name":"open override fun toString(): String","description":"entities.abstract.CompetitorAbstraction.toString","location":"elektion/entities.abstract/-competitor-abstraction/to-string.html","searchKeys":["toString","open override fun toString(): String","entities.abstract.CompetitorAbstraction.toString"]},{"name":"open override fun toString(): String","description":"entities.abstract.ScoreAbstraction.toString","location":"elektion/entities.abstract/-score-abstraction/to-string.html","searchKeys":["toString","open override fun toString(): String","entities.abstract.ScoreAbstraction.toString"]},{"name":"open override fun toString(): String","description":"entities.types.BestTimeInMatch.toString","location":"elektion/entities.types/-best-time-in-match/to-string.html","searchKeys":["toString","open override fun toString(): String","entities.types.BestTimeInMatch.toString"]},{"name":"open override fun toString(): String","description":"entities.types.FastestLapAvgSpeed.toString","location":"elektion/entities.types/-fastest-lap-avg-speed/to-string.html","searchKeys":["toString","open override fun toString(): String","entities.types.FastestLapAvgSpeed.toString"]},{"name":"open override fun toString(): String","description":"entities.types.PointsInRace.toString","location":"elektion/entities.types/-points-in-race/to-string.html","searchKeys":["toString","open override fun toString(): String","entities.types.PointsInRace.toString"]},{"name":"open override fun toString(): String","description":"entities.types.WinsInCampionship.toString","location":"elektion/entities.types/-wins-in-campionship/to-string.html","searchKeys":["toString","open override fun toString(): String","entities.types.WinsInCampionship.toString"]},{"name":"open override val parameter: String","description":"entities.types.ConstantParameter.AllowMultipleVoteInPollParameter.parameter","location":"elektion/entities.types/-constant-parameter/-allow-multiple-vote-in-poll-parameter/parameter.html","searchKeys":["parameter","open override val parameter: String","entities.types.ConstantParameter.AllowMultipleVoteInPollParameter.parameter"]},{"name":"open override val ranking: Map<Set<Competitor<S>>, Int?>","description":"entities.implementations.CondorcetRanking.ranking","location":"elektion/entities.implementations/-condorcet-ranking/ranking.html","searchKeys":["ranking","open override val ranking: Map<Set<Competitor<S>>, Int?>","entities.implementations.CondorcetRanking.ranking"]},{"name":"open override val ranking: Map<Set<Competitor<S>>, Int?>","description":"entities.implementations.RankingByDescendingVotes.ranking","location":"elektion/entities.implementations/-ranking-by-descending-votes/ranking.html","searchKeys":["ranking","open override val ranking: Map<Set<Competitor<S>>, Int?>","entities.implementations.RankingByDescendingVotes.ranking"]},{"name":"open override val ranking: Map<Set<Competitor<S>>, Int?>","description":"entities.implementations.RankingByDescendingVotesThenHighestScore.ranking","location":"elektion/entities.implementations/-ranking-by-descending-votes-then-highest-score/ranking.html","searchKeys":["ranking","open override val ranking: Map<Set<Competitor<S>>, Int?>","entities.implementations.RankingByDescendingVotesThenHighestScore.ranking"]},{"name":"open override val ranking: Map<Set<Competitor<S>>, Int?>","description":"entities.implementations.RankingByDescendingVotesThenLowestScore.ranking","location":"elektion/entities.implementations/-ranking-by-descending-votes-then-lowest-score/ranking.html","searchKeys":["ranking","open override val ranking: Map<Set<Competitor<S>>, Int?>","entities.implementations.RankingByDescendingVotesThenLowestScore.ranking"]},{"name":"open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","description":"entities.implementations.CondorcetAlgorithm.pollAlgorithmParameters","location":"elektion/entities.implementations/-condorcet-algorithm/poll-algorithm-parameters.html","searchKeys":["pollAlgorithmParameters","open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","entities.implementations.CondorcetAlgorithm.pollAlgorithmParameters"]},{"name":"open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","description":"entities.implementations.MajorityVotesAlgorithm.pollAlgorithmParameters","location":"elektion/entities.implementations/-majority-votes-algorithm/poll-algorithm-parameters.html","searchKeys":["pollAlgorithmParameters","open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","entities.implementations.MajorityVotesAlgorithm.pollAlgorithmParameters"]},{"name":"open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","description":"entities.implementations.MajorityVotesThenHighestScoreAlgorithm.pollAlgorithmParameters","location":"elektion/entities.implementations/-majority-votes-then-highest-score-algorithm/poll-algorithm-parameters.html","searchKeys":["pollAlgorithmParameters","open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","entities.implementations.MajorityVotesThenHighestScoreAlgorithm.pollAlgorithmParameters"]},{"name":"open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","description":"entities.implementations.MajorityVotesThenLowestScoreAlgorithm.pollAlgorithmParameters","location":"elektion/entities.implementations/-majority-votes-then-lowest-score-algorithm/poll-algorithm-parameters.html","searchKeys":["pollAlgorithmParameters","open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","entities.implementations.MajorityVotesThenLowestScoreAlgorithm.pollAlgorithmParameters"]},{"name":"open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","description":"entities.implementations.SchultzeAlgorithm.pollAlgorithmParameters","location":"elektion/entities.implementations/-schultze-algorithm/poll-algorithm-parameters.html","searchKeys":["pollAlgorithmParameters","open override var pollAlgorithmParameters: List<PollAlgorithmParameter>","entities.implementations.SchultzeAlgorithm.pollAlgorithmParameters"]},{"name":"open override var scores: List<Score<S>>","description":"entities.abstract.CompetitorAbstraction.scores","location":"elektion/entities.abstract/-competitor-abstraction/scores.html","searchKeys":["scores","open override var scores: List<Score<S>>","entities.abstract.CompetitorAbstraction.scores"]},{"name":"sealed class Comparator","description":"entities.types.Comparator","location":"elektion/entities.types/-comparator/index.html","searchKeys":["Comparator","sealed class Comparator","entities.types.Comparator"]},{"name":"sealed class ConstantParameter","description":"entities.types.ConstantParameter","location":"elektion/entities.types/-constant-parameter/index.html","searchKeys":["ConstantParameter","sealed class ConstantParameter","entities.types.ConstantParameter"]},{"name":"suspend fun main()","description":"main","location":"elektion/[root]/main.html","searchKeys":["main","suspend fun main()","main"]},{"name":"val duration: Duration","description":"entities.types.BestTimeInMatch.duration","location":"elektion/entities.types/-best-time-in-match/duration.html","searchKeys":["duration","val duration: Duration","entities.types.BestTimeInMatch.duration"]},{"name":"val points: Int","description":"entities.types.PointsInRace.points","location":"elektion/entities.types/-points-in-race/points.html","searchKeys":["points","val points: Int","entities.types.PointsInRace.points"]},{"name":"val speed: Float","description":"entities.types.FastestLapAvgSpeed.speed","location":"elektion/entities.types/-fastest-lap-avg-speed/speed.html","searchKeys":["speed","val speed: Float","entities.types.FastestLapAvgSpeed.speed"]},{"name":"val wins: Int","description":"entities.types.WinsInCampionship.wins","location":"elektion/entities.types/-wins-in-campionship/wins.html","searchKeys":["wins","val wins: Int","entities.types.WinsInCampionship.wins"]},{"name":"var averageSpeed: SpeedType?","description":"FastestLapType.averageSpeed","location":"elektion/[root]/-fastest-lap-type/average-speed.html","searchKeys":["averageSpeed","var averageSpeed: SpeedType?","FastestLapType.averageSpeed"]},{"name":"var constructorNode: ConstructorType?","description":"ResultType.constructorNode","location":"elektion/[root]/-result-type/constructor-node.html","searchKeys":["constructorNode","var constructorNode: ConstructorType?","ResultType.constructorNode"]},{"name":"var driver: DriverType?","description":"ResultType.driver","location":"elektion/[root]/-result-type/driver.html","searchKeys":["driver","var driver: DriverType?","ResultType.driver"]},{"name":"var familyName: String?","description":"DriverType.familyName","location":"elektion/[root]/-driver-type/family-name.html","searchKeys":["familyName","var familyName: String?","DriverType.familyName"]},{"name":"var fastestLap: FastestLapType?","description":"ResultType.fastestLap","location":"elektion/[root]/-result-type/fastest-lap.html","searchKeys":["fastestLap","var fastestLap: FastestLapType?","ResultType.fastestLap"]},{"name":"var givenName: String?","description":"DriverType.givenName","location":"elektion/[root]/-driver-type/given-name.html","searchKeys":["givenName","var givenName: String?","DriverType.givenName"]},{"name":"var mRData: MRDataType?","description":"RootType.mRData","location":"elektion/[root]/-root-type/m-r-data.html","searchKeys":["mRData","var mRData: MRDataType?","RootType.mRData"]},{"name":"var name: String?","description":"ConstructorType.name","location":"elektion/[root]/-constructor-type/name.html","searchKeys":["name","var name: String?","ConstructorType.name"]},{"name":"var number: Int?","description":"ResultType.number","location":"elektion/[root]/-result-type/number.html","searchKeys":["number","var number: Int?","ResultType.number"]},{"name":"var points: Float?","description":"ResultType.points","location":"elektion/[root]/-result-type/points.html","searchKeys":["points","var points: Float?","ResultType.points"]},{"name":"var raceName: String?","description":"RaceType.raceName","location":"elektion/[root]/-race-type/race-name.html","searchKeys":["raceName","var raceName: String?","RaceType.raceName"]},{"name":"var raceTable: RaceTableType?","description":"MRDataType.raceTable","location":"elektion/[root]/-m-r-data-type/race-table.html","searchKeys":["raceTable","var raceTable: RaceTableType?","MRDataType.raceTable"]},{"name":"var races: Array<RaceType>?","description":"RaceTableType.races","location":"elektion/[root]/-race-table-type/races.html","searchKeys":["races","var races: Array<RaceType>?","RaceTableType.races"]},{"name":"var results: Array<ResultType>?","description":"RaceType.results","location":"elektion/[root]/-race-type/results.html","searchKeys":["results","var results: Array<ResultType>?","RaceType.results"]},{"name":"var round: String?","description":"RaceType.round","location":"elektion/[root]/-race-type/round.html","searchKeys":["round","var round: String?","RaceType.round"]},{"name":"var season: String?","description":"RaceType.season","location":"elektion/[root]/-race-type/season.html","searchKeys":["season","var season: String?","RaceType.season"]},{"name":"var speed: Float","description":"SpeedType.speed","location":"elektion/[root]/-speed-type/speed.html","searchKeys":["speed","var speed: Float","SpeedType.speed"]},{"name":"var time: DurationType?","description":"FastestLapType.time","location":"elektion/[root]/-fastest-lap-type/time.html","searchKeys":["time","var time: DurationType?","FastestLapType.time"]},{"name":"var time: String?","description":"DurationType.time","location":"elektion/[root]/-duration-type/time.html","searchKeys":["time","var time: String?","DurationType.time"]},{"name":"var units: String?","description":"SpeedType.units","location":"elektion/[root]/-speed-type/units.html","searchKeys":["units","var units: String?","SpeedType.units"]}]
